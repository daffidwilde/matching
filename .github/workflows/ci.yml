name: CI

on:
  push:
  pull_request:
  # Run daily at 0:01 UTC
  schedule:
  - cron:  '1 0 * * *'

jobs:
  test:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@master
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install -r requirements.txt
        python -m pip install -q --no-cache-dir -e .
        python -m pip install -q --no-cache-dir pytest pytest-cov
        python -m pip install -q --no-cache-dir isort black flake8
        python -m pip install -q --no-cache-dir sphinx sphinx_rtd_theme
        python -m pip install -q --no-cache-dir nbval sphinxcontrib-bibtex
        python -m pip install -q --no-cache-dir matplotlib pandas PyYAML
        python -m pip install -q --no-cache-dir ipython==7.10
        python -m pip list
    - name: Lint with Black
      if: matrix.python-version == 3.8 && matrix.os == 'ubuntu-latest'
      run: |
        python -m black --check --diff -l 80 .
    - name: Lint imports with isort
      if: matrix.python-version == 3.8 && matrix.os == 'ubuntu-latest'
      run: |
        python -m isort -w 80 -m 3 --trailing-comma --check-only .
    - name: Lint with flake8
      if: matrix.python-version == 3.8 && matrix.os == 'ubuntu-latest'
      run: |
        python -m flake8 --max-line-length=80 --ignore=E203,W503 .
    - name: Test with pytest 
      run: |
        python -m pytest --cov=matching --cov-fail-under=100 tests
    - name: Doctesting
      run: |
        python -m pytest --nbval --current-env docs
        python -m doctest paper.md
        python -m doctest README.rst
    - name: Check pip install
      run: |
          python -m pip uninstall -y matching
          python -m pip install matching

